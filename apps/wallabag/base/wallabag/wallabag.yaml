# Wallabag Service
apiVersion: v1
kind: Service
metadata:
  name: wallabag-service
  namespace: wallabag
spec:
  selector:
    app: wallabag
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
#Wallabag Job - Initial Setup
apiVersion: batch/v1
kind: Job
metadata:
  name: wallabag-install
  namespace: wallabag
  annotations:
    # This ensures the job runs before the deployment
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 300  # Auto-cleanup after 5 minutes
  template:
    metadata:
      labels:
        app: wallabag-installer
    spec:
      restartPolicy: Never
      initContainers:
      - name: wait-for-db
        image: postgres:15-alpine
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h postgres-cluster-rw -p 5432 -U wallabag; do
            echo "PostgreSQL not ready yet, waiting..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      - name: setup-permissions
        image: wallabag/wallabag:latest
        command: ['sh', '-c']
        args:
        - |
          echo "Setting up directories and permissions..."
          mkdir -p /var/www/wallabag/var/sessions
          mkdir -p /var/www/wallabag/var/cache
          mkdir -p /var/www/wallabag/var/logs
          mkdir -p /var/www/wallabag/data
          mkdir -p /var/www/wallabag/web/assets/images
          
          # Set proper ownership and permissions
          chown -R nobody:nobody /var/www/wallabag/var/
          chown -R nobody:nobody /var/www/wallabag/data/
          chown -R nobody:nobody /var/www/wallabag/web/assets/images/
          chmod -R 755 /var/www/wallabag/var/
          chmod -R 755 /var/www/wallabag/data/
          chmod -R 755 /var/www/wallabag/web/assets/images/
          
          echo "Permissions setup completed"
        volumeMounts:
        - name: wallabag-data
          mountPath: /var/www/wallabag/data
        - name: wallabag-data
          mountPath: /var/www/wallabag/web/assets/images
        - name: wallabag-data
          mountPath: /var/www/wallabag/var
          subPath: var
      containers:
      - name: wallabag-installer
        image: wallabag/wallabag:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "=== Wallabag Automated Installation ==="
          
          # Check if already installed by looking for a marker file
          if [ -f /var/www/wallabag/data/.installed ]; then
            echo "‚úÖ Wallabag already installed, skipping installation"
            exit 0
          fi
          
          echo "üöÄ Starting fresh Wallabag installation..."
          
          # Run the installation
          if php bin/console wallabag:install --env=prod --no-interaction; then
            echo "‚úÖ Wallabag installation completed successfully"
            
            # Create marker file to indicate successful installation
            touch /var/www/wallabag/data/.installed
            echo "$(date): Wallabag installed successfully" > /var/www/wallabag/data/.installed
            
            echo "üìù Installation marker created"
            echo "üéâ Wallabag is ready to use!"
            
            # Display default credentials reminder
            echo ""
            echo "=== DEFAULT CREDENTIALS ==="
            echo "Username: wallabag"
            echo "Password: wallabag"
            echo "‚ö†Ô∏è  CHANGE THESE AFTER FIRST LOGIN!"
            echo "=========================="
            
          else
            echo "‚ùå Installation failed!"
            exit 1
          fi
        env:
        - name: SYMFONY__ENV__DOMAIN_NAME
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DOMAIN_NAME
        - name: SYMFONY__ENV__DATABASE_DRIVER
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_DRIVER
        - name: SYMFONY__ENV__DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_HOST
        - name: SYMFONY__ENV__DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_PORT
        - name: SYMFONY__ENV__DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_NAME
        - name: SYMFONY__ENV__DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_USER
        - name: SYMFONY__ENV__DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_PASSWORD
        - name: SYMFONY__ENV__REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__REDIS_HOST
        volumeMounts:
        - name: wallabag-data
          mountPath: /var/www/wallabag/data
        - name: wallabag-data
          mountPath: /var/www/wallabag/web/assets/images
        - name: wallabag-data
          mountPath: /var/www/wallabag/var
          subPath: var
      volumes:
      - name: wallabag-data
        persistentVolumeClaim:
          claimName: wallabag-data-pvc
---
# Clean Wallabag Deployment - Init Container + App Container
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallabag
  namespace: wallabag
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wallabag
  template:
    metadata:
      labels:
        app: wallabag
    spec:
      initContainers:
      - name: init-wallabag
        image: wallabag/wallabag:latest
        command: ['sh', '-c']
        args:
        - |
          echo "=== Wallabag Initialization ==="
          
          # 1. Wait for PostgreSQL
          echo "1. Waiting for PostgreSQL to be ready..."
          until pg_isready -h postgres-cluster-rw -p 5432 -U wallabag; do
            echo "PostgreSQL not ready, waiting..."
            sleep 2
          done
          echo "‚úÖ PostgreSQL is ready!"
        env:
        - name: SYMFONY__ENV__DOMAIN_NAME
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DOMAIN_NAME
        - name: SYMFONY__ENV__DATABASE_DRIVER
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_DRIVER
        - name: SYMFONY__ENV__DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_HOST
        - name: SYMFONY__ENV__DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_PORT
        - name: SYMFONY__ENV__DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_NAME
        - name: SYMFONY__ENV__DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_USER
        - name: SYMFONY__ENV__DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_PASSWORD
        - name: SYMFONY__ENV__REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__REDIS_HOST
        volumeMounts:
        - name: wallabag-data
          mountPath: /var/www/wallabag/data
        - name: wallabag-data
          mountPath: /var/www/wallabag/web/assets/images
        - name: wallabag-data
          mountPath: /var/www/wallabag/var
          subPath: var
      containers:
      - name: wallabag
        image: wallabag/wallabag:latest
        ports:
        - containerPort: 80
        env:
        - name: SYMFONY__ENV__DOMAIN_NAME
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DOMAIN_NAME
        - name: SYMFONY__ENV__DATABASE_DRIVER
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_DRIVER
        - name: SYMFONY__ENV__DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_HOST
        - name: SYMFONY__ENV__DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_PORT
        - name: SYMFONY__ENV__DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_NAME
        - name: SYMFONY__ENV__DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_USER
        - name: SYMFONY__ENV__DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__DATABASE_PASSWORD
        - name: SYMFONY__ENV__REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: wallabag-secret
              key: SYMFONY__ENV__REDIS_HOST
        volumeMounts:
        - name: wallabag-data
          mountPath: /var/www/wallabag/web/assets/images
        - name: wallabag-data
          mountPath: /var/www/wallabag/data
        - name: wallabag-data
          mountPath: /var/www/wallabag/var
          subPath: var

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: wallabag-data
        persistentVolumeClaim:
          claimName: wallabag-data-pvc
---
# Wallabag persistent volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wallabag-data-pvc
  namespace: wallabag
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
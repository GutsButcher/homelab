# CloudNativePG Cluster
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: n8n-postgres
  namespace: n8n
spec:
  instances: 1
  
  bootstrap:
    initdb:
      database: n8n
      owner: n8n
      secret:
        name: n8n-postgres-credentials
        
  storage:
    size: 10Gi
    storageClass: local-path  # default k3s storage class, adjust as needed
---
# PersistentVolumeClaim for n8n data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-data
  namespace: n8n
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
  labels:
    app: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - name: n8n
        image: docker.n8n.io/n8nio/n8n:latest
        ports:
        - containerPort: 5678
          name: http
        env:
        # Existing environment variables...
        - name: WEBHOOK_URL
          value: "https://n8n.gwynbliedd.com/"
        - name: N8N_HOST
          value: "n8n.gwynbliedd.com"
        - name: N8N_PORT
          value: "5678"
        - name: N8N_PROTOCOL
          value: "https"
        - name: NODE_ENV
          value: "production"
        - name: EXECUTIONS_PROCESS
          value: "main"
        - name: EXECUTIONS_MODE
          value: "regular"
        - name: DB_TYPE
          value: "postgresdb"
        - name: DB_POSTGRESDB_HOST
          value: "n8n-postgres-rw"
        - name: DB_POSTGRESDB_PORT
          value: "5432"
        - name: DB_POSTGRESDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: n8n-postgres-credentials
              key: database
        - name: DB_POSTGRESDB_USER
          valueFrom:
            secretKeyRef:
              name: n8n-postgres-credentials
              key: username
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-postgres-credentials
              key: password
        - name: DB_POSTGRESDB_SCHEMA
          valueFrom:
            secretKeyRef:
              name: n8n-postgres-credentials
              key: schema
        # --- SMTP Configuration Variables ---
        - name: N8N_EMAIL_MODE
          value: "smtp"
        - name: N8N_SMTP_HOST
          value: "smtp.gmail.com"
        - name: N8N_SMTP_PORT
          value: "465" 
        - name: N8N_SMTP_USER
          value: "abdulla.amash@gmail.com" 
        - name: N8N_SMTP_PASS
          valueFrom:
            secretKeyRef:
              name: n8n-smtp-credentials 
              key: smtp_password        
        - name: N8N_SMTP_SSL
          value: "true" # Set to "true" for port 465 (SSL/TLS implicit)
                        # Set to "false" if using port 587 (STARTTLS, which is explicit TLS)
        - name: N8N_SMTP_SENDER
          valueFrom:
            secretKeyRef:
              name: n8n-smtp-credentials
              key: smtp_sender
        # --- End SMTP Configuration ---
        volumeMounts:
        - name: n8n-data
          mountPath: /home/node/.n8n
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-data
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: n8n
  namespace: n8n
  labels:
    app: n8n
spec:
  type: ClusterIP
  ports:
  - port: 5678
    targetPort: 5678
    protocol: TCP
    name: http
  selector:
    app: n8n